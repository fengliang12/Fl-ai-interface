# GitHub Actions CI 工作流配置文件
name: CI Pipeline # 工作流名称

# 触发条件：推送或拉取请求时执行
on:
  push: # 推送代码时触发
    branches: [master, develop] # 在master和develop分支触发
  pull_request: # 拉取请求时触发
    branches: [master] # 针对master分支的PR
  workflow_dispatch: # 手动触发

# 设置并发控制，确保同一分支只有一个工作流运行
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# 任务定义
jobs:
  # ESLint 代码检查
  lint: # 代码检查任务名称
    runs-on: ubuntu-latest # 运行环境：Ubuntu最新版
    timeout-minutes: 10 # 任务超时时间：10分钟

    steps: # 执行步骤列表
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4 # 安装PNPM包管理器
        with: # 配置参数
          version: 8 # 使用PNPM版本8

      - uses: actions/setup-node@v4 # 设置Node.js环境
        with: # 配置参数
          node-version: 20 # 使用Node.js版本20
          cache: 'pnpm' # 启用PNPM缓存加速安装

      - name: Install dependencies and run ESLint # 安装依赖并运行ESLint
        run: | # 多行命令脚本
          pnpm install --no-frozen-lockfile # 安装依赖（允许更新锁定文件）
          pnpm run lint # 运行ESLint代码风格检查

  # 单元测试
  test: # 单元测试任务名称
    runs-on: ubuntu-latest # 运行环境：Ubuntu最新版
    timeout-minutes: 15 # 任务超时时间：15分钟

    steps: # 执行步骤列表
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4 # 安装PNPM包管理器
        with: # 配置参数
          version: 8 # 使用PNPM版本8

      - uses: actions/setup-node@v4 # 设置Node.js环境
        with: # 配置参数
          node-version: 20 # 使用Node.js版本20
          cache: 'pnpm' # 启用PNPM缓存加速安装

      - name: Install dependencies and run tests # 安装依赖并运行单元测试
        run: | # 多行命令脚本
          pnpm install --no-frozen-lockfile # 安装依赖（允许更新锁定文件）
          pnpm run test:unit:ci # 运行Jest单元测试

  # E2E测试
  e2e: # E2E测试任务名称
    runs-on: ubuntu-latest # 运行环境：Ubuntu最新版
    timeout-minutes: 20 # 任务超时时间：20分钟

    steps: # 执行步骤列表
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4 # 安装PNPM包管理器
        with: # 配置参数
          version: 8 # 使用PNPM版本8

      - uses: actions/setup-node@v4 # 设置Node.js环境
        with: # 配置参数
          node-version: 20 # 使用Node.js版本20
          cache: 'pnpm' # 启用PNPM缓存加速安装

      - name: Install dependencies # 安装依赖
        run: pnpm install --no-frozen-lockfile # 安装依赖（允许更新锁定文件）

      - name: Install Cypress binary # 安装Cypress二进制文件
        run: npx cypress install # 确保Cypress二进制文件已安装

      - name: Start development server # 启动开发服务器
        run: pnpm run dev & # 在后台启动开发服务器
        env:
          CI: true

      - name: Wait for server to be ready # 等待服务器就绪
        run: npx wait-on http://localhost:3000 --timeout 60000 # 等待服务器启动

      - name: Run E2E tests # 运行E2E测试
        run: pnpm run test:e2e:ci # 运行Cypress E2E测试

  # 部署任务 - 只有在所有测试通过后才执行
  deploy:
    runs-on: ubuntu-latest
    needs: [lint, test, e2e] # 依赖所有测试任务完成
    if: github.event_name == 'workflow_dispatch' || (github.ref == 'refs/heads/master' && github.event_name == 'push') || (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'master') # 手动触发、master分支push或PR合并到master时部署
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build for production
        run: pnpm run build
        env:
          NODE_ENV: production

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy dist --project-name=fl-ai-interface

      - name: Deployment success notification
        run: |
          echo "🚀 Deployment completed successfully!"
          echo "✅ All tests passed and application deployed to Cloudflare Pages."
